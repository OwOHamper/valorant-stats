{"ast":null,"code":"import NativeReanimated from \"./NativeReanimated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nglobal.__reanimatedWorkletInit = function (worklet) {\n  worklet.__worklet = true;\n};\n\nfunction _toArrayReanimated(object) {\n  'worklet';\n\n  if (Array.isArray(object)) {\n    return object;\n  }\n\n  if (typeof Symbol !== 'undefined' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') in Object(object)) return Array.from(object);\n  throw new 'Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'();\n}\n\nfunction _mergeObjectsReanimated() {\n  'worklet';\n\n  return Object.assign.apply(null, arguments);\n}\n\nglobal.__reanimatedWorkletInit = function (worklet) {\n  worklet.__worklet = true;\n\n  if (worklet._closure) {\n    var closure = worklet._closure;\n    Object.keys(closure).forEach(function (key) {\n      if (key === '_toConsumableArray') {\n        closure[key] = _toArrayReanimated;\n      }\n\n      if (key === '_objectSpread') {\n        closure[key] = _mergeObjectsReanimated;\n      }\n    });\n  }\n};\n\nfunction pushFrame(frame) {\n  NativeReanimated.pushFrame(frame);\n}\n\nexport function requestFrame(frame) {\n  'worklet';\n\n  if (NativeReanimated.native) {\n    requestAnimationFrame(frame);\n  } else {\n    pushFrame(frame);\n  }\n}\nglobal._WORKLET = false;\n\nglobal._log = function (s) {\n  console.log(s);\n};\n\nexport function runOnUI(worklet) {\n  return makeShareable(worklet);\n}\nexport function makeShareable(value) {\n  return NativeReanimated.makeShareable(value);\n}\nexport function getViewProp(viewTag, propName) {\n  return new Promise(function (resolve, reject) {\n    return NativeReanimated.getViewProp(viewTag, propName, function (result) {\n      if (result.substr(0, 6) === 'error:') {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nfunction _getTimestamp() {\n  'worklet';\n\n  if (_frameTimestamp) {\n    return _frameTimestamp;\n  }\n\n  if (_eventTimestamp) {\n    return _eventTimestamp;\n  }\n\n  return _getCurrentTime();\n}\n\nexport function getTimestamp() {\n  'worklet';\n\n  if (Platform.OS === 'web') {\n    return NativeReanimated.getTimestamp();\n  }\n\n  return _getTimestamp();\n}\n\nfunction workletValueSetter(value) {\n  'worklet';\n\n  var _this = this;\n\n  var previousAnimation = this._animation;\n\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n\n  if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame) {\n    var animation = typeof value === 'function' ? value() : value;\n\n    var initializeAnimation = function initializeAnimation(timestamp) {\n      animation.onStart(animation, _this.value, timestamp, previousAnimation);\n    };\n\n    initializeAnimation(getTimestamp());\n\n    var step = function step(timestamp) {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false);\n        return;\n      }\n\n      var finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      _this._value = animation.current;\n\n      if (finished) {\n        animation.callback && animation.callback(true);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    this._animation = animation;\n\n    if (_frameTimestamp) {\n      step(_frameTimestamp);\n    } else {\n      requestAnimationFrame(step);\n    }\n  } else {\n    this._value = value;\n  }\n}\n\nfunction workletValueSetterJS(value) {\n  var _this2 = this;\n\n  var previousAnimation = this._animation;\n\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n\n  if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame) {\n    var animation = typeof value === 'function' ? value() : value;\n\n    var initializeAnimation = function initializeAnimation(timestamp) {\n      animation.onStart(animation, _this2.value, timestamp, previousAnimation);\n    };\n\n    var step = function step(timestamp) {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false);\n        return;\n      }\n\n      if (initializeAnimation) {\n        initializeAnimation(timestamp);\n        initializeAnimation = null;\n      }\n\n      var finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n\n      _this2._setValue(animation.current);\n\n      if (finished) {\n        animation.callback && animation.callback(true);\n      } else {\n        requestFrame(step);\n      }\n    };\n\n    this._animation = animation;\n    requestFrame(step);\n  } else {\n    this._setValue(value);\n  }\n}\n\nNativeReanimated.installCoreFunctions(NativeReanimated.native ? workletValueSetter : workletValueSetterJS);\nexport function makeMutable(value) {\n  return NativeReanimated.makeMutable(value);\n}\nexport function makeRemote() {\n  var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return NativeReanimated.makeRemote(object);\n}\nexport function startMapper(mapper) {\n  var inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return NativeReanimated.startMapper(mapper, inputs, outputs);\n}\nexport function stopMapper(mapperId) {\n  NativeReanimated.stopMapper(mapperId);\n}\nexport var runOnJS = function runOnJS(fun) {\n  'worklet';\n\n  if (!_WORKLET) {\n    return fun;\n  }\n\n  if (!fun.__callAsync) {\n    throw new Error(\"Attempting to call runOnJS with an object that is not a host function. Using runOnJS is only possible with methods that are defined on the main React-Native Javascript thread and that aren't marked as worklets\");\n  } else {\n    return fun.__callAsync;\n  }\n};\nvar capturableConsole = console;\nrunOnUI(function () {\n  'worklet';\n\n  var console = {\n    log: runOnJS(capturableConsole.log),\n    warn: runOnJS(capturableConsole.warn),\n    error: runOnJS(capturableConsole.error)\n  };\n\n  _globalSetter('console', console);\n})();","map":{"version":3,"sources":["C:/Users/nicov/Projects/NodeJS/valo-app/node_modules/react-native-reanimated/src/reanimated2/core.js"],"names":["NativeReanimated","global","__reanimatedWorkletInit","worklet","__worklet","_toArrayReanimated","object","Array","isArray","Symbol","iterator","Object","from","_mergeObjectsReanimated","assign","apply","arguments","_closure","closure","keys","forEach","key","pushFrame","frame","requestFrame","native","requestAnimationFrame","_WORKLET","_log","s","console","log","runOnUI","makeShareable","value","getViewProp","viewTag","propName","Promise","resolve","reject","result","substr","_getTimestamp","_frameTimestamp","_eventTimestamp","_getCurrentTime","getTimestamp","Platform","OS","workletValueSetter","previousAnimation","_animation","cancelled","onFrame","animation","initializeAnimation","timestamp","onStart","step","callback","finished","_value","current","workletValueSetterJS","_setValue","installCoreFunctions","makeMutable","makeRemote","startMapper","mapper","inputs","outputs","stopMapper","mapperId","runOnJS","fun","__callAsync","Error","capturableConsole","warn","error","_globalSetter"],"mappings":"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","sourcesContent":["/* global _WORKLET _getCurrentTime _frameTimestamp _eventTimestamp */\n\nimport NativeReanimated from './NativeReanimated';\nimport { Platform } from 'react-native';\n\nglobal.__reanimatedWorkletInit = function(worklet) {\n  worklet.__worklet = true;\n};\n\nfunction _toArrayReanimated(object) {\n  'worklet';\n  if (Array.isArray(object)) {\n    return object;\n  }\n  if (\n    typeof Symbol !== 'undefined' &&\n    (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') in\n      Object(object)\n  )\n    return Array.from(object);\n  throw new 'Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'();\n}\n\nfunction _mergeObjectsReanimated() {\n  'worklet';\n  return Object.assign.apply(null, arguments);\n}\n\nglobal.__reanimatedWorkletInit = function(worklet) {\n  worklet.__worklet = true;\n\n  if (worklet._closure) {\n    const closure = worklet._closure;\n    Object.keys(closure).forEach((key) => {\n      if (key === '_toConsumableArray') {\n        closure[key] = _toArrayReanimated;\n      }\n\n      if (key === '_objectSpread') {\n        closure[key] = _mergeObjectsReanimated;\n      }\n    });\n  }\n};\n\nfunction pushFrame(frame) {\n  NativeReanimated.pushFrame(frame);\n}\n\nexport function requestFrame(frame) {\n  'worklet';\n  if (NativeReanimated.native) {\n    requestAnimationFrame(frame);\n  } else {\n    pushFrame(frame);\n  }\n}\n\nglobal._WORKLET = false;\nglobal._log = function(s) {\n  console.log(s);\n};\n\nexport function runOnUI(worklet) {\n  return makeShareable(worklet);\n}\n\nexport function makeShareable(value) {\n  return NativeReanimated.makeShareable(value);\n}\n\nexport function getViewProp(viewTag, propName) {\n  return new Promise((resolve, reject) => {\n    return NativeReanimated.getViewProp(viewTag, propName, (result) => {\n      if (result.substr(0, 6) === 'error:') {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nfunction _getTimestamp() {\n  'worklet';\n  if (_frameTimestamp) {\n    return _frameTimestamp;\n  }\n  if (_eventTimestamp) {\n    return _eventTimestamp;\n  }\n  return _getCurrentTime();\n}\n\nexport function getTimestamp() {\n  'worklet';\n  if (Platform.OS === 'web') {\n    return NativeReanimated.getTimestamp();\n  }\n  return _getTimestamp();\n}\n\nfunction workletValueSetter(value) {\n  'worklet';\n  const previousAnimation = this._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n  if (\n    typeof value === 'function' ||\n    (value !== null && typeof value === 'object' && value.onFrame)\n  ) {\n    // animated set\n    const animation = typeof value === 'function' ? value() : value;\n    const initializeAnimation = (timestamp) => {\n      animation.onStart(animation, this.value, timestamp, previousAnimation);\n    };\n    initializeAnimation(getTimestamp());\n    const step = (timestamp) => {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false /* finished */);\n        return;\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      this._value = animation.current;\n      if (finished) {\n        animation.callback && animation.callback(true /* finished */);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    this._animation = animation;\n\n    if (_frameTimestamp) {\n      // frame\n      step(_frameTimestamp);\n    } else {\n      requestAnimationFrame(step);\n    }\n  } else {\n    this._value = value;\n  }\n}\n\n// We cannot use pushFrame\n// so we use own implementation for js\nfunction workletValueSetterJS(value) {\n  const previousAnimation = this._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n  if (\n    typeof value === 'function' ||\n    (value !== null && typeof value === 'object' && value.onFrame)\n  ) {\n    // animated set\n    const animation = typeof value === 'function' ? value() : value;\n    let initializeAnimation = (timestamp) => {\n      animation.onStart(animation, this.value, timestamp, previousAnimation);\n    };\n    const step = (timestamp) => {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false /* finished */);\n        return;\n      }\n      if (initializeAnimation) {\n        initializeAnimation(timestamp);\n        initializeAnimation = null; // prevent closure from keeping ref to previous animation\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      this._setValue(animation.current);\n      if (finished) {\n        animation.callback && animation.callback(true /* finished */);\n      } else {\n        requestFrame(step);\n      }\n    };\n\n    this._animation = animation;\n\n    requestFrame(step);\n  } else {\n    this._setValue(value);\n  }\n}\n\nNativeReanimated.installCoreFunctions(\n  NativeReanimated.native ? workletValueSetter : workletValueSetterJS\n);\n\nexport function makeMutable(value) {\n  return NativeReanimated.makeMutable(value);\n}\n\nexport function makeRemote(object = {}) {\n  return NativeReanimated.makeRemote(object);\n}\n\nexport function startMapper(mapper, inputs = [], outputs = []) {\n  return NativeReanimated.startMapper(mapper, inputs, outputs);\n}\n\nexport function stopMapper(mapperId) {\n  NativeReanimated.stopMapper(mapperId);\n}\n\nexport const runOnJS = (fun) => {\n  'worklet';\n  if (!_WORKLET) {\n    return fun;\n  }\n  if (!fun.__callAsync) {\n    throw new Error(\n      \"Attempting to call runOnJS with an object that is not a host function. Using runOnJS is only possible with methods that are defined on the main React-Native Javascript thread and that aren't marked as worklets\"\n    );\n  } else {\n    return fun.__callAsync;\n  }\n};\n\nconst capturableConsole = console;\nrunOnUI(() => {\n  'worklet';\n  const console = {\n    log: runOnJS(capturableConsole.log),\n    warn: runOnJS(capturableConsole.warn),\n    error: runOnJS(capturableConsole.error),\n  };\n  _globalSetter('console', console); // eslint-disable-line\n})();\n"]},"metadata":{},"sourceType":"module"}