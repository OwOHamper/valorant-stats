{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport function getUser() {\n  var response, uri, regexResult, accessToken, idtoken, expiresIn, entitlementsToken, userId;\n  return _regeneratorRuntime.async(function getUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.t0 = _regeneratorRuntime;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(getUrl(\"auth\"), {\n            method: \"POST\",\n            body: JSON.stringify({\n              client_id: \"play-valorant-web-prod\",\n              nonce: \"1\",\n              redirect_uri: \"https://playvalorant.com/opt_in\",\n              response_type: \"token id_token\"\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\"\n          }));\n\n        case 3:\n          _context.t1 = _context.sent.json();\n          _context.next = 6;\n          return _context.t0.awrap.call(_context.t0, _context.t1);\n\n        case 6:\n          response = _context.sent;\n\n          if (!(response.type === \"response\")) {\n            _context.next = 28;\n            break;\n          }\n\n          uri = response[\"response\"][\"parameters\"][\"uri\"];\n          regexResult = uri.match(/access_token=((?:[a-zA-Z]|\\d|\\.|-|_)*).*id_token=((?:[a-zA-Z]|\\d|\\.|-|_)*).*expires_in=(\\d*)/);\n          accessToken = regexResult[1];\n          idtoken = regexResult[2];\n          expiresIn = regexResult[3];\n          _context.t2 = _regeneratorRuntime;\n          _context.next = 16;\n          return _regeneratorRuntime.awrap(fetch(getUrl(\"entitlements\"), {\n            method: \"POST\",\n            body: \"\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + accessToken\n            },\n            credentials: \"include\"\n          }));\n\n        case 16:\n          _context.t3 = _context.sent.json();\n          _context.next = 19;\n          return _context.t2.awrap.call(_context.t2, _context.t3);\n\n        case 19:\n          entitlementsToken = _context.sent.entitlements_token;\n          _context.t4 = _regeneratorRuntime;\n          _context.next = 23;\n          return _regeneratorRuntime.awrap(fetch(getUrl(\"userinfo\"), {\n            method: \"POST\",\n            body: \"\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + accessToken\n            },\n            credentials: \"include\"\n          }));\n\n        case 23:\n          _context.t5 = _context.sent.json();\n          _context.next = 26;\n          return _context.t4.awrap.call(_context.t4, _context.t5);\n\n        case 26:\n          userId = _context.sent.sub;\n          return _context.abrupt(\"return\", {\n            accessToken: accessToken,\n            entitlementsToken: entitlementsToken,\n            idtoken: idtoken,\n            expiresIn: expiresIn,\n            id: userId,\n            loading: false,\n            region: \"eu\"\n          });\n\n        case 28:\n          return _context.abrupt(\"return\", null);\n\n        case 29:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function login(username, password, region) {\n  var response, _response, uri, regexResult, accessToken, idtoken, expiresIn, entitlementsToken, userId;\n\n  return _regeneratorRuntime.async(function login$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.t0 = _regeneratorRuntime;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(fetch(getUrl(\"auth\"), {\n            method: \"POST\",\n            body: JSON.stringify({\n              client_id: \"play-valorant-web-prod\",\n              nonce: \"1\",\n              redirect_uri: \"https://playvalorant.com/opt_in\",\n              response_type: \"token id_token\"\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\"\n          }));\n\n        case 3:\n          _context2.t1 = _context2.sent.json();\n          _context2.next = 6;\n          return _context2.t0.awrap.call(_context2.t0, _context2.t1);\n\n        case 6:\n          response = _context2.sent;\n\n          if (!(response.type === \"auth\")) {\n            _context2.next = 37;\n            break;\n          }\n\n          _context2.t2 = _regeneratorRuntime;\n          _context2.next = 11;\n          return _regeneratorRuntime.awrap(fetch(getUrl(\"auth\"), {\n            method: \"PUT\",\n            body: JSON.stringify({\n              type: \"auth\",\n              username: username,\n              password: password\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\"\n          }));\n\n        case 11:\n          _context2.t3 = _context2.sent.json();\n          _context2.next = 14;\n          return _context2.t2.awrap.call(_context2.t2, _context2.t3);\n\n        case 14:\n          _response = _context2.sent;\n          uri = _response[\"response\"][\"parameters\"][\"uri\"];\n          regexResult = uri.match(/access_token=((?:[a-zA-Z]|\\d|\\.|-|_)*).*id_token=((?:[a-zA-Z]|\\d|\\.|-|_)*).*expires_in=(\\d*)/);\n          accessToken = regexResult[1];\n          idtoken = regexResult[2];\n          expiresIn = regexResult[3];\n          _context2.t4 = _regeneratorRuntime;\n          _context2.next = 23;\n          return _regeneratorRuntime.awrap(fetch(getUrl(\"entitlements\"), {\n            method: \"POST\",\n            body: \"\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + accessToken\n            },\n            credentials: \"include\"\n          }));\n\n        case 23:\n          _context2.t5 = _context2.sent.json();\n          _context2.next = 26;\n          return _context2.t4.awrap.call(_context2.t4, _context2.t5);\n\n        case 26:\n          entitlementsToken = _context2.sent.entitlements_token;\n          _context2.t6 = _regeneratorRuntime;\n          _context2.next = 30;\n          return _regeneratorRuntime.awrap(fetch(getUrl(\"userinfo\"), {\n            method: \"POST\",\n            body: \"\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: \"Bearer \" + accessToken\n            },\n            credentials: \"include\"\n          }));\n\n        case 30:\n          _context2.t7 = _context2.sent.json();\n          _context2.next = 33;\n          return _context2.t6.awrap.call(_context2.t6, _context2.t7);\n\n        case 33:\n          userId = _context2.sent.sub;\n          return _context2.abrupt(\"return\", {\n            accessToken: accessToken,\n            entitlementsToken: entitlementsToken,\n            idtoken: idtoken,\n            expiresIn: expiresIn,\n            region: region,\n            id: userId,\n            loading: false\n          });\n\n        case 37:\n          console.log(\"Session already exists...\");\n\n        case 38:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getShop(user) {\n  var shop, singleItems, i;\n  return _regeneratorRuntime.async(function getShop$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.t0 = _regeneratorRuntime;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(fetch(getUrl(\"storefront\", user.region, user.id), {\n            method: \"GET\",\n            headers: {\n              \"X-Riot-Entitlements-JWT\": user.entitlementsToken,\n              Authorization: \"Bearer \" + user.accessToken\n            },\n            credentials: \"include\"\n          }));\n\n        case 3:\n          _context3.t1 = _context3.sent.json();\n          _context3.next = 6;\n          return _context3.t0.awrap.call(_context3.t0, _context3.t1);\n\n        case 6:\n          shop = _context3.sent;\n          singleItems = shop.SkinsPanelLayout.SingleItemOffers;\n          i = 0;\n\n        case 9:\n          if (!(i < singleItems.length)) {\n            _context3.next = 20;\n            break;\n          }\n\n          _context3.t2 = _regeneratorRuntime;\n          _context3.next = 13;\n          return _regeneratorRuntime.awrap(fetch(\"https://valorant-api.com/v1/weapons/skinlevels/\" + singleItems[i]));\n\n        case 13:\n          _context3.t3 = _context3.sent.json();\n          _context3.next = 16;\n          return _context3.t2.awrap.call(_context3.t2, _context3.t3);\n\n        case 16:\n          singleItems[i] = _context3.sent.data;\n\n        case 17:\n          i++;\n          _context3.next = 9;\n          break;\n\n        case 20:\n          return _context3.abrupt(\"return\", {\n            singleItems: singleItems\n          });\n\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getUrl(name, region, userid) {\n  var URLS = {\n    auth: \"https://auth.riotgames.com/api/v1/authorization\",\n    entitlements: \"https://entitlements.auth.riotgames.com/api/token/v1\",\n    userinfo: \"https://auth.riotgames.com/userinfo\",\n    storefront: \"https://pd.\" + region + \".a.pvp.net/store/v2/storefront/\" + userid,\n    weapons: \"https://valorant-api.com/v1/weapons\",\n    offers: \"https://pd.\" + region + \".a.pvp.net/store/v1/offers\",\n    playerId: \"https://pd.\" + region + \".a.pvp.net/name-service/v2/players\"\n  };\n  return URLS[name];\n}","map":{"version":3,"sources":["C:/Users/nicov/Projects/NodeJS/valo-app/utils/ValorantAPI.ts"],"names":["getUser","fetch","getUrl","method","body","JSON","stringify","client_id","nonce","redirect_uri","response_type","headers","credentials","json","response","type","uri","regexResult","match","accessToken","idtoken","expiresIn","Authorization","entitlementsToken","entitlements_token","userId","sub","id","loading","region","login","username","password","console","log","getShop","user","shop","singleItems","SkinsPanelLayout","SingleItemOffers","i","length","data","name","userid","URLS","auth","entitlements","userinfo","storefront","weapons","offers","playerId"],"mappings":"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","sourcesContent":["export async function getUser() {\r\n  let response = await (\r\n    await fetch(getUrl(\"auth\"), {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        client_id: \"play-valorant-web-prod\",\r\n        nonce: \"1\",\r\n        redirect_uri: \"https://playvalorant.com/opt_in\",\r\n        response_type: \"token id_token\",\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n  ).json();\r\n\r\n  if (response.type === \"response\") {\r\n    const uri = response[\"response\"][\"parameters\"][\"uri\"];\r\n\r\n    const regexResult = uri.match(\r\n      /access_token=((?:[a-zA-Z]|\\d|\\.|-|_)*).*id_token=((?:[a-zA-Z]|\\d|\\.|-|_)*).*expires_in=(\\d*)/\r\n    );\r\n    const accessToken = regexResult[1];\r\n    const idtoken = regexResult[2];\r\n    const expiresIn = regexResult[3];\r\n\r\n    /* Entitlements */\r\n    const entitlementsToken = (\r\n      await (\r\n        await fetch(getUrl(\"entitlements\"), {\r\n          method: \"POST\",\r\n          body: \"\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n          credentials: \"include\",\r\n        })\r\n      ).json()\r\n    ).entitlements_token;\r\n\r\n    /* UserId */\r\n    const userId = (\r\n      await (\r\n        await fetch(getUrl(\"userinfo\"), {\r\n          method: \"POST\",\r\n          body: \"\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n          credentials: \"include\",\r\n        })\r\n      ).json()\r\n    ).sub;\r\n\r\n    return {\r\n      accessToken,\r\n      entitlementsToken,\r\n      idtoken,\r\n      expiresIn,\r\n      id: userId,\r\n      loading: false,\r\n      region: \"eu\",\r\n    };\r\n  }\r\n  return null;\r\n}\r\n\r\nexport async function login(\r\n  username: string,\r\n  password: string,\r\n  region: string\r\n) {\r\n  let response = await (\r\n    await fetch(getUrl(\"auth\"), {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        client_id: \"play-valorant-web-prod\",\r\n        nonce: \"1\",\r\n        redirect_uri: \"https://playvalorant.com/opt_in\",\r\n        response_type: \"token id_token\",\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n  ).json();\r\n\r\n  if (response.type === \"auth\") {\r\n    /* LOG IN */\r\n    let response = await (\r\n      await fetch(getUrl(\"auth\"), {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({\r\n          type: \"auth\",\r\n          username,\r\n          password,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"include\",\r\n      })\r\n    ).json();\r\n\r\n    const uri = response[\"response\"][\"parameters\"][\"uri\"];\r\n\r\n    const regexResult = uri.match(\r\n      /access_token=((?:[a-zA-Z]|\\d|\\.|-|_)*).*id_token=((?:[a-zA-Z]|\\d|\\.|-|_)*).*expires_in=(\\d*)/\r\n    );\r\n    const accessToken = regexResult[1];\r\n    const idtoken = regexResult[2];\r\n    const expiresIn = regexResult[3];\r\n\r\n    /* Entitlements */\r\n    const entitlementsToken = (\r\n      await (\r\n        await fetch(getUrl(\"entitlements\"), {\r\n          method: \"POST\",\r\n          body: \"\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n          credentials: \"include\",\r\n        })\r\n      ).json()\r\n    ).entitlements_token;\r\n\r\n    /* UserId */\r\n    const userId = (\r\n      await (\r\n        await fetch(getUrl(\"userinfo\"), {\r\n          method: \"POST\",\r\n          body: \"\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n          credentials: \"include\",\r\n        })\r\n      ).json()\r\n    ).sub;\r\n\r\n    return {\r\n      accessToken,\r\n      entitlementsToken,\r\n      idtoken,\r\n      expiresIn,\r\n      region,\r\n      id: userId,\r\n      loading: false,\r\n    };\r\n  } else {\r\n    console.log(\"Session already exists...\");\r\n  }\r\n}\r\n\r\nexport async function getShop(user: user) {\r\n  const shop = await (\r\n    await fetch(getUrl(\"storefront\", user.region, user.id), {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"X-Riot-Entitlements-JWT\": user.entitlementsToken,\r\n        Authorization: `Bearer ${user.accessToken}`,\r\n      },\r\n      credentials: \"include\",\r\n    })\r\n  ).json();\r\n\r\n  var singleItems = shop.SkinsPanelLayout.SingleItemOffers;\r\n\r\n  for (var i = 0; i < singleItems.length; i++) {\r\n    singleItems[i] = (\r\n      await (\r\n        await fetch(\r\n          `https://valorant-api.com/v1/weapons/skinlevels/${singleItems[i]}`\r\n        )\r\n      ).json()\r\n    ).data;\r\n  }\r\n\r\n  return { singleItems } as shopItems;\r\n}\r\n\r\nfunction getUrl(name: string, region?: string, userid?: string) {\r\n  const URLS: any = {\r\n    auth: \"https://auth.riotgames.com/api/v1/authorization\",\r\n    entitlements: \"https://entitlements.auth.riotgames.com/api/token/v1\",\r\n    userinfo: \"https://auth.riotgames.com/userinfo\",\r\n    storefront: `https://pd.${region}.a.pvp.net/store/v2/storefront/${userid}`,\r\n    weapons: \"https://valorant-api.com/v1/weapons\",\r\n    offers: `https://pd.${region}.a.pvp.net/store/v1/offers`,\r\n    playerId: `https://pd.${region}.a.pvp.net/name-service/v2/players`,\r\n  };\r\n\r\n  return URLS[name];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}