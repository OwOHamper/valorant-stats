{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nicov\\\\Projects\\\\NodeJS\\\\valo-app\\\\components\\\\Login.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, TextInput } from \"react-native-paper\";\nimport DropDown from \"react-native-paper-dropdown\";\nimport { getUser, login } from \"../utils/ValorantAPI\";\nexport default function Login(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"eu\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      region = _useState6[0],\n      setRegion = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dropdownShown = _useState8[0],\n      setDropdownShown = _useState8[1];\n\n  useEffect(function () {\n    getUser().then(function (user) {\n      if (user) {\n        props.setUser(user);\n      }\n    });\n  }, []);\n\n  var handleLogin = function handleLogin() {\n    var data;\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            props.setUser({\n              loading: true\n            });\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(login(username, password, region));\n\n          case 3:\n            data = _context.sent;\n            props.setUser(data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: {\n      width: 250,\n      height: 50,\n      marginBottom: 10\n    },\n    onChangeText: function onChangeText(text) {\n      setUsername(text);\n    },\n    label: \"Username\",\n    autoCompleteType: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    onChangeText: function onChangeText(text) {\n      setPassword(text);\n    },\n    style: {\n      width: 250,\n      height: 50,\n      marginBottom: 10\n    },\n    autoCompleteType: \"password\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      width: 100,\n      marginBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(DropDown, {\n    label: \"Region\",\n    mode: \"outlined\",\n    visible: dropdownShown,\n    showDropDown: function showDropDown() {\n      return setDropdownShown(true);\n    },\n    onDismiss: function onDismiss() {\n      return setDropdownShown(false);\n    },\n    value: region,\n    setValue: setRegion,\n    list: [{\n      label: \"EU\",\n      value: \"eu\"\n    }, {\n      label: \"NA\",\n      value: \"na\"\n    }, {\n      label: \"AP\",\n      value: \"ap\"\n    }, {\n      label: \"KR\",\n      value: \"kr\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), React.createElement(Button, {\n    onPress: handleLogin,\n    mode: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Log In\"));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/nicov/Projects/NodeJS/valo-app/components/Login.tsx"],"names":["React","useEffect","useState","Button","TextInput","DropDown","getUser","login","Login","props","username","setUsername","password","setPassword","region","setRegion","dropdownShown","setDropdownShown","then","user","setUser","handleLogin","loading","data","styles","container","width","height","marginBottom","text","label","value","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { Button, TextInput } from \"react-native-paper\";\r\nimport DropDown from \"react-native-paper-dropdown\";\r\nimport { getUser, login } from \"../utils/ValorantAPI\";\r\n\r\ninterface props {\r\n  setUser: Function;\r\n}\r\nexport default function Login(props: props) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [region, setRegion] = useState(\"eu\");\r\n  const [dropdownShown, setDropdownShown] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // set user if exists\r\n    getUser().then((user) => {\r\n      if (user) {\r\n        props.setUser(user);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleLogin = async () => {\r\n    props.setUser({ loading: true });\r\n    const data = await login(username, password, region);\r\n    props.setUser(data);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={{ width: 250, height: 50, marginBottom: 10 }}\r\n        onChangeText={(text) => {\r\n          setUsername(text);\r\n        }}\r\n        label=\"Username\"\r\n        autoCompleteType=\"username\"\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        onChangeText={(text) => {\r\n          setPassword(text);\r\n        }}\r\n        style={{ width: 250, height: 50, marginBottom: 10 }}\r\n        autoCompleteType=\"password\"\r\n        secureTextEntry={true}\r\n      />\r\n      <View style={{ width: 100, marginBottom: 15 }}>\r\n        <DropDown\r\n          label={\"Region\"}\r\n          mode={\"outlined\"}\r\n          visible={dropdownShown}\r\n          showDropDown={() => setDropdownShown(true)}\r\n          onDismiss={() => setDropdownShown(false)}\r\n          value={region}\r\n          setValue={setRegion}\r\n          list={[\r\n            { label: \"EU\", value: \"eu\" },\r\n            { label: \"NA\", value: \"na\" },\r\n            { label: \"AP\", value: \"ap\" },\r\n            { label: \"KR\", value: \"kr\" },\r\n          ]}\r\n        />\r\n      </View>\r\n      <Button onPress={handleLogin} mode=\"contained\">\r\n        Log In\r\n      </Button>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}